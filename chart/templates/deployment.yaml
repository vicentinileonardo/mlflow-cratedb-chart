apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.mlflow.name }}
  namespace: {{ .Values.mlflow.namespace }}
  labels:
    app: {{ .Values.mlflow.name }}
spec:
  replicas: {{ .Values.mlflow.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.mlflow.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.mlflow.name }}
    spec:
      containers:
      - name: {{ .Values.mlflow.name }}
        image: {{ .Values.mlflow.image.repository }}:{{ .Values.mlflow.image.tag }}
        command: ["/bin/sh", "-c"]
        args:
        - |
          pip install boto3 &&
          mlflow-cratedb server \
            --backend-store-uri=crate://$(CRATEDB_USERNAME):$(CRATEDB_PASSWORD)@{{ .Values.cratedb.host }}:{{ .Values.cratedb.port }}/?schema={{ .Values.cratedb.schema }} \
            --artifacts-destination=s3://{{ .Values.s3.bucket }} \
            --serve-artifacts \
            --host=0.0.0.0 \
            --gunicorn-opts=--log-level=debug    
        ports:
        - containerPort: {{ .Values.service.targetPort }}
        resources:
          {{- toYaml .Values.mlflow.resources | nindent 10 }}
        env:
        - name: MLFLOW_S3_ENDPOINT_URL
          value: {{ .Values.s3.endpoint }}
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: {{ .Values.s3.secretName }}
              key: AWS_ACCESS_KEY_ID
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Values.s3.secretName }}
              key: AWS_SECRET_ACCESS_KEY
        - name: CRATEDB_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ .Values.cratedb.secretName }}
              key: CRATEDB_USERNAME        
        - name: CRATEDB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.cratedb.secretName }}
              key: CRATEDB_PASSWORD
